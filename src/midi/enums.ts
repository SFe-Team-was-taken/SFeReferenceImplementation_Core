// All the midi statuses dictionary
export const midiMessageTypes = {
    noteOff: 0x80,
    noteOn: 0x90,
    polyPressure: 0xa0,
    controllerChange: 0xb0,
    programChange: 0xc0,
    channelPressure: 0xd0,
    pitchWheel: 0xe0,
    systemExclusive: 0xf0,
    timecode: 0xf1,
    songPosition: 0xf2,
    songSelect: 0xf3,
    tuneRequest: 0xf6,
    clock: 0xf8,
    start: 0xfa,
    continue: 0xfb,
    stop: 0xfc,
    activeSensing: 0xfe,
    reset: 0xff,
    sequenceNumber: 0x00,
    text: 0x01,
    copyright: 0x02,
    trackName: 0x03,
    instrumentName: 0x04,
    lyric: 0x05,
    marker: 0x06,
    cuePoint: 0x07,
    programName: 0x08,
    midiChannelPrefix: 0x20,
    midiPort: 0x21,
    endOfTrack: 0x2f,
    setTempo: 0x51,
    smpteOffset: 0x54,
    timeSignature: 0x58,
    keySignature: 0x59,
    sequenceSpecific: 0x7f
} as const;

export type MIDIMessageType =
    (typeof midiMessageTypes)[keyof typeof midiMessageTypes];

// All midi controllers dictionary
export const midiControllers = {
    bankSelect: 0,
    modulationWheel: 1,
    breathController: 2,
    undefinedCC3: 3,
    footController: 4,
    portamentoTime: 5,
    dataEntryMSB: 6,
    mainVolume: 7,
    balance: 8,
    undefinedCC9: 9,
    pan: 10,
    expressionController: 11,
    effectControl1: 12,
    effectControl2: 13,
    undefinedCC14: 14,
    undefinedCC15: 15,
    generalPurposeController1: 16,
    generalPurposeController2: 17,
    generalPurposeController3: 18,
    generalPurposeController4: 19,
    undefinedCC20: 20,
    undefinedCC21: 21,
    undefinedCC22: 22,
    undefinedCC23: 23,
    undefinedCC24: 24,
    undefinedCC25: 25,
    undefinedCC26: 26,
    undefinedCC27: 27,
    undefinedCC28: 28,
    undefinedCC29: 29,
    undefinedCC30: 30,
    undefinedCC31: 31,
    bankSelectLSB: 32,
    modulationWheelLSB: 33,
    breathControllerLSB: 34,
    undefinedCC3LSB: 35,
    footControllerLSB: 36,
    portamentoTimeLSB: 37,
    dataEntryLSB: 38,
    mainVolumeLSB: 39,
    balanceLSB: 40,
    undefinedCC9LSB: 41,
    panLSB: 42,
    expressionControllerLSB: 43,
    effectControl1LSB: 44,
    effectControl2LSB: 45,
    undefinedCC14LSB: 46,
    undefinedCC15LSB: 47,
    undefinedCC16LSB: 48,
    undefinedCC17LSB: 49,
    undefinedCC18LSB: 50,
    undefinedCC19LSB: 51,
    undefinedCC20LSB: 52,
    undefinedCC21LSB: 53,
    undefinedCC22LSB: 54,
    undefinedCC23LSB: 55,
    undefinedCC24LSB: 56,
    undefinedCC25LSB: 57,
    undefinedCC26LSB: 58,
    undefinedCC27LSB: 59,
    undefinedCC28LSB: 60,
    undefinedCC29LSB: 61,
    undefinedCC30LSB: 62,
    undefinedCC31LSB: 63,
    sustainPedal: 64,
    portamentoOnOff: 65,
    sostenutoPedal: 66,
    softPedal: 67,
    legatoFootswitch: 68,
    hold2Pedal: 69,
    soundVariation: 70,
    filterResonance: 71,
    releaseTime: 72,
    attackTime: 73,
    brightness: 74,
    decayTime: 75,
    vibratoRate: 76,
    vibratoDepth: 77,
    vibratoDelay: 78,
    soundController10: 79,
    generalPurposeController5: 80,
    generalPurposeController6: 81,
    generalPurposeController7: 82,
    generalPurposeController8: 83,
    portamentoControl: 84,
    undefinedCC85: 85,
    undefinedCC86: 86,
    undefinedCC87: 87,
    undefinedCC88: 88,
    undefinedCC89: 89,
    undefinedCC90: 90,
    reverbDepth: 91,
    tremoloDepth: 92,
    chorusDepth: 93,
    detuneDepth: 94,
    phaserDepth: 95,
    dataIncrement: 96,
    dataDecrement: 97,
    nonRegisteredParameterLSB: 98,
    nonRegisteredParameterMSB: 99,
    registeredParameterLSB: 100,
    registeredParameterMSB: 101,
    undefinedCC102LSB: 102,
    undefinedCC103LSB: 103,
    undefinedCC104LSB: 104,
    undefinedCC105LSB: 105,
    undefinedCC106LSB: 106,
    undefinedCC107LSB: 107,
    undefinedCC108LSB: 108,
    undefinedCC109LSB: 109,
    undefinedCC110LSB: 110,
    undefinedCC111LSB: 111,
    undefinedCC112LSB: 112,
    undefinedCC113LSB: 113,
    undefinedCC114LSB: 114,
    undefinedCC115LSB: 115,
    undefinedCC116LSB: 116,
    undefinedCC117LSB: 117,
    undefinedCC118LSB: 118,
    undefinedCC119LSB: 119,
    allSoundOff: 120,
    resetAllControllers: 121,
    localControlOnOff: 122,
    allNotesOff: 123,
    omniModeOff: 124,
    omniModeOn: 125,
    monoModeOn: 126,
    polyModeOn: 127
} as const;

export type MIDIController =
    (typeof midiControllers)[keyof typeof midiControllers];
